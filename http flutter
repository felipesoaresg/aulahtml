import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

Future<http.Response> enviarResposta(String title) async {
  var resposta = await http.get(
    Uri.parse('http://10.0.3.132:1313/listar-alunos'),
    headers: <String, String>{
      'Content-Type': 'application/json; charset=UTF-8',
    },
  );

  print(resposta.body.toString());

  return resposta;
}

Future<http.Response> pegarDados(String title) async {
  var resposta = await http.get(
    Uri.parse('http://10.0.3.132:1313/save-data'),
    headers: <String, String>{
      'Content-Type': 'application/json; charset=UTF-8',
    },
  );

}

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: const MyHomePage(title: 'Flutter Demo Home Page'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({Key? key, required this.title}) : super(key: key);
  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _counter = 0;

  void _incrementCounter() {
    setState(() {
      _counter++;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(widget.title),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text('Nome:'),
            TextField(),
            Text('Email:'),
            TextField(),
            Text('Telefone:'),
            TextField(),
            Text('Turma:'),
            TextField(),
            ElevatedButton(
                child: const Icon(Icons.check, color: Colors.green),
                onPressed: () async {
                  enviarResposta;
                }),
          ],
        ),
      ), // This trailing comma makes auto-formatting nicer for build methods.
    );
  }
}
